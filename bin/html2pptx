#!/usr/bin/env node

const { convertHTML2PPTX } = require('../lib/html2pptx');
const fs = require('fs');
const path = require('path');

/**
 * CLI Tool for HTML to PowerPoint Conversion
 */

// Parse command line arguments
const args = process.argv.slice(2);

// Display help
function showHelp() {
    console.log(`
HTML to PowerPoint Converter
=============================

Usage: html2pptx <input.html> <output.pptx> [options]

Arguments:
  input.html   Path to the input HTML file
  output.pptx  Path for the output PowerPoint file

Options:
  --help, -h   Show this help message
  --version    Show version information

Examples:
  html2pptx slide.html presentation.pptx
  html2pptx ./input/page.html ./output/slides.pptx

Description:
  Converts HTML files to PowerPoint presentations automatically.
  Supports text boxes, images, SVG elements, and complex layouts.
  Preserves styling including colors, fonts, borders, and positioning.
`);
}

// Display version
function showVersion() {
    const packageJson = require('../package.json');
    console.log(`html2pptx v${packageJson.version}`);
}

// Validate file path
function validateInputFile(filePath) {
    if (!fs.existsSync(filePath)) {
        console.error(`‚ùå Error: Input file not found: ${filePath}`);
        process.exit(1);
    }
    
    const ext = path.extname(filePath).toLowerCase();
    if (ext !== '.html' && ext !== '.htm') {
        console.error(`‚ùå Error: Input file must be an HTML file (.html or .htm)`);
        process.exit(1);
    }
}

// Validate output path
function validateOutputPath(filePath) {
    const ext = path.extname(filePath).toLowerCase();
    if (ext !== '.pptx') {
        console.error(`‚ùå Error: Output file must have .pptx extension`);
        process.exit(1);
    }
    
    const dir = path.dirname(filePath);
    if (!fs.existsSync(dir)) {
        try {
            fs.mkdirSync(dir, { recursive: true });
        } catch (e) {
            console.error(`‚ùå Error: Cannot create output directory: ${dir}`);
            process.exit(1);
        }
    }
}

// Main function
async function main() {
    // Handle help and version flags
    if (args.includes('--help') || args.includes('-h')) {
        showHelp();
        process.exit(0);
    }
    
    if (args.includes('--version')) {
        showVersion();
        process.exit(0);
    }
    
    // Check arguments
    if (args.length < 2) {
        console.error('‚ùå Error: Missing required arguments\n');
        showHelp();
        process.exit(1);
    }
    
    const inputPath = path.resolve(args[0]);
    const outputPath = path.resolve(args[1]);
    
    // Validate paths
    validateInputFile(inputPath);
    validateOutputPath(outputPath);
    
    // Convert
    console.log('üîÑ Converting HTML to PowerPoint...');
    console.log(`   Input:  ${inputPath}`);
    console.log(`   Output: ${outputPath}`);
    
    try {
        const startTime = Date.now();
        
        const result = await convertHTML2PPTX(inputPath, outputPath);
        
        const duration = ((Date.now() - startTime) / 1000).toFixed(2);
        
        console.log(`‚úÖ Conversion successful! (${duration}s)`);
        console.log(`   PowerPoint file saved to: ${outputPath}`);
        
    } catch (error) {
        console.error(`\n‚ùå Conversion failed: ${error.message}`);
        
        if (process.env.DEBUG) {
            console.error('\nStack trace:');
            console.error(error.stack);
        } else {
            console.error('\nRun with DEBUG=1 environment variable for detailed error information');
        }
        
        process.exit(1);
    }
}

// Run main function
main().catch(error => {
    console.error(`‚ùå Unexpected error: ${error.message}`);
    process.exit(1);
});
